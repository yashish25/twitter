[{"/home/ashish/workspace/twitter/frontend/src/serviceWorker.js":"1","/home/ashish/workspace/twitter/frontend/src/pages/Login.jsx":"2","/home/ashish/workspace/twitter/frontend/src/index.js":"3","/home/ashish/workspace/twitter/frontend/src/conf/routes.js":"4","/home/ashish/workspace/twitter/frontend/src/pages/Register.jsx":"5","/home/ashish/workspace/twitter/frontend/src/App.js":"6","/home/ashish/workspace/twitter/frontend/src/pages/Tweet.jsx":"7"},{"size":5086,"mtime":1606333071670,"results":"8","hashOfConfig":"9"},{"size":5284,"mtime":1606333071670,"results":"10","hashOfConfig":"9"},{"size":549,"mtime":1606333071670,"results":"11","hashOfConfig":"9"},{"size":381,"mtime":1606507857169,"results":"12","hashOfConfig":"9"},{"size":6526,"mtime":1606731904987,"results":"13","hashOfConfig":"9"},{"size":2015,"mtime":1606565291540,"results":"14","hashOfConfig":"9"},{"size":5326,"mtime":1606905519043,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2lp0r4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ashish/workspace/twitter/frontend/src/serviceWorker.js",[],["34","35"],"/home/ashish/workspace/twitter/frontend/src/pages/Login.jsx",[],"/home/ashish/workspace/twitter/frontend/src/index.js",[],["36","37"],"/home/ashish/workspace/twitter/frontend/src/conf/routes.js",[],"/home/ashish/workspace/twitter/frontend/src/pages/Register.jsx",["38"],"/home/ashish/workspace/twitter/frontend/src/App.js",["39","40"],"import React, { Fragment } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\nimport routes from './conf/routes';\n\nfunction App() {\n    const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n\n    // We need this to reset the max age of our userId\n    if (cookies && cookies.userId) {\n        setCookie('userId', cookies.userId, {\n            path: '/',\n            maxAge: process.env.REACT_APP_ENV_COOKIES_MAX_AGE\n        });\n    }\n\n    // Checks if the user is logged in\n    function isLoggedIn() {\n        return cookies.userId == 'undefined' || !cookies.userId ? false : true;\n    }\n\n    return (\n        <BrowserRouter>\n            <Nav defaultActiveKey=\"/\">\n                {isLoggedIn() ?\n                    <Fragment>\n                        <Nav.Item as=\"li\">\n                            <Nav.Link href=\"/tweet\">Tweet</Nav.Link>               \n                        </Nav.Item>\n\n                        <Nav.Item as=\"li\">\n                            <Nav.Link onClick={() => {\n                                removeCookie('userId');\n                            }}>Logout</Nav.Link>               \n                        </Nav.Item>  \n                    </Fragment>\n                : \n                    <Nav.Item as=\"li\">\n                        <Nav.Link href=\"/register\">Register Now!</Nav.Link>\n                        <Nav.Link href=\"/login\">Login</Nav.Link> \n                        \n                                      \n                    </Nav.Item>\n                    \n                }               \n            </Nav> \n            <Fragment>\n                {routes.map( ({ path, component, name}) => {\n                    return <Route exact path={path} key={name} component={component} />\n                })}\n            </Fragment>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n",["41","42"],"/home/ashish/workspace/twitter/frontend/src/pages/Tweet.jsx",["43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":130,"column":31,"nodeType":"54","messageId":"55","endLine":130,"endColumn":33},{"ruleId":"56","severity":1,"message":"57","line":3,"column":32,"nodeType":"58","messageId":"59","endLine":3,"endColumn":40},{"ruleId":"52","severity":1,"message":"60","line":22,"column":31,"nodeType":"54","messageId":"55","endLine":22,"endColumn":33},{"ruleId":"46","replacedBy":"61"},{"ruleId":"48","replacedBy":"62"},{"ruleId":"56","severity":1,"message":"63","line":11,"column":21,"nodeType":"58","messageId":"59","endLine":11,"endColumn":30},{"ruleId":"56","severity":1,"message":"64","line":11,"column":32,"nodeType":"58","messageId":"59","endLine":11,"endColumn":44},{"ruleId":"65","severity":1,"message":"66","line":35,"column":8,"nodeType":"67","endLine":35,"endColumn":10,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.",["69"],["70"],"'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [getList]",{"range":"74","text":"75"},[1119,1121],"[getList]"]